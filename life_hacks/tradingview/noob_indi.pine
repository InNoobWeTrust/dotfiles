//@version=5
indicator("Noob's Indicators", overlay = true, max_lines_count = 500, max_bars_back = 3600)

//=============================================================================
// const
//=============================================================================
elliott_all_waves = 144
elliott_decisive_wave = 89
elliott_secondary_wave = 34

forex = 200

golden_ratio = 610

pythagorean_material = 147
pythagorean_mind = 258
pythagorean_wisdom = 369

banker_short_term = 257
banker_medium_term = 458
banker_long_term = 630

//=============================================================================
// EMA lines const
//=============================================================================

// Sonic R
ema_elliott_secondary_wave = ta.ema(close, elliott_secondary_wave)
ema_elliott_secondary_wave_low = ta.ema(low, elliott_secondary_wave)
ema_elliott_secondary_wave_high = ta.ema(high, elliott_secondary_wave)
ema_elliott_decisive_wave = ta.ema(close, elliott_decisive_wave)

ema_forex = ta.ema(close, forex)
ema_golden_ratio = ta.ema(close, golden_ratio)

// Pythagorean
ema_pythagorean_material = ta.ema(close, pythagorean_material)
ema_pythagorean_mind = ta.ema(close, pythagorean_mind)
ema_pythagorean_wisdom = ta.ema(close, pythagorean_wisdom)

// Banker
ema_elliott_all_waves = ta.ema(close, elliott_all_waves)
ema_banker_short_term = ta.ema(close, banker_short_term)
ema_banker_medium_term = ta.ema(close, banker_medium_term)
ema_banker_long_term = ta.ema(close, banker_long_term)


//=============================================================================
// EMA Pythagorean
//=============================================================================

// Input
//-----------------------------------------------------------------------------{
pythagorean_grp = '► EMA Pythagorean'
show_pythagorean = input.bool(true, inline = "Enable Pythagorean cloud", group = pythagorean_grp, title = "Show Pythagorean cloud", tooltip = "Pythagorean cloud is a long-term trend reversing indicator. Green is uptrend and red is downtrend")
ema_material_color = input.color(color.new(color.navy, transp = 20), title = "Material stage", group = pythagorean_grp)
ema_mind_color = input.color(color.new(color.red, transp = 20), title = "Mind stage", group = pythagorean_grp)
ema_wisdom_color = input.color(color.new(color.maroon, transp = 20), title = "Wisdom stage", group = pythagorean_grp)
pythagorean_up_color = input.color(color.new(color.green, transp = 85), title = "Pythagorean Cloud", inline = "Pythagorean", group = pythagorean_grp)
pythagorean_down_color = input.color(color.new(color.red, transp = 85), title = "", inline = "Pythagorean", group = pythagorean_grp)
//-----------------------------------------------------------------------------}

// Plot
//-----------------------------------------------------------------------------{
pythagorean_material_plot = plot(show_pythagorean ? ema_pythagorean_material : na, title = "Pythagorean material stage", color = ema_material_color, linewidth = 1, style = plot.style_line)
pythagorean_mind_plot = plot(show_pythagorean ? ema_pythagorean_mind : na, title = "Pythagorean mind state", color = ema_mind_color, linewidth = 2, style = plot.style_line)
pythagorean_wisdom_plot = plot(show_pythagorean ? ema_pythagorean_wisdom : na, title = "Pythagorean wisdom state", color = ema_wisdom_color, linewidth = 1, style = plot.style_line)
up_down_color = ema_pythagorean_material > ema_pythagorean_wisdom ? pythagorean_up_color : pythagorean_down_color
fill(pythagorean_material_plot, pythagorean_wisdom_plot, up_down_color)
//-----------------------------------------------------------------------------}

//=============================================================================
// Sonic R
//=============================================================================

// Input
//-----------------------------------------------------------------------------{
sonic_r_grp = '► Sonic R'
show_sonic_r = input.bool(true, inline = "Enable Sonic R", group = sonic_r_grp, title = "Show Sonic R", tooltip = "Sonic R indicate dynamic support/resistant levels for price action")
ema_elliott_secondary_wave_color = input.color(color.blue, title = "Elliott secondary wave (main line)", inline = "Elliott secondary wave" , group = sonic_r_grp)
ema_elliott_secondary_wave_fill_color = input.color(color.new(color.blue, transp = 85), title = "Elliott secondary wave (fill color)", inline = 'Elliott secondary wave', group = sonic_r_grp)
ema_elliott_decisive_wave_color = input.color(color.orange, title = "Elliott decisive wave", inline = "Elliott decisive wave" , group = sonic_r_grp)
ema_forex_color = input.color(color.purple, title = "Forex 200 sessions", inline = "Forex 200 sessions" , group = sonic_r_grp)
ema_golden_ratio_color = input.color(color.white, title = "Golden ratio", inline = "Golden ratio" , group = sonic_r_grp)
//-----------------------------------------------------------------------------}

// Plot
//-----------------------------------------------------------------------------{
plot(show_sonic_r ? ema_elliott_secondary_wave : na, title = "Elliott secondary wave", color = ema_elliott_secondary_wave_color, linewidth = 1, style = plot.style_line)
sonic_r_low = plot(show_sonic_r ? ema_elliott_secondary_wave_low : na, title = "Elliott secondary wave lower bound", color = ema_elliott_secondary_wave_fill_color, linewidth = 1, style = plot.style_line)
sonic_r_high = plot(show_sonic_r ? ema_elliott_secondary_wave_high : na, title = "Elliott secondary wave higher bound", color = ema_elliott_secondary_wave_fill_color, linewidth = 1, style = plot.style_line)
fill(sonic_r_low, sonic_r_high, ema_elliott_secondary_wave_fill_color)
plot(show_sonic_r ? ema_elliott_decisive_wave : na, title = "Elliott decisive wave", color = ema_elliott_decisive_wave_color, linewidth = 2, style = plot.style_line)
plot(show_sonic_r ? ema_forex : na, title = "Forex 200 sessions", color = ema_forex_color, linewidth = 2, style = plot.style_line)
plot(show_sonic_r ? ema_golden_ratio : na, title = "Golden ratio", color = ema_golden_ratio_color, linewidth = 2, style = plot.style_line)
//-----------------------------------------------------------------------------}


//=============================================================================
// Banker
//=============================================================================

// Input
//-----------------------------------------------------------------------------{
banker_grp = '► Banker'
show_banker = input.bool(true, inline = "Enable EMA Banker", group = banker_grp, title = "Show EMA Banker", tooltip = "EMA banker indicate strong dynamic support/resistant levels for price action in long-term trade")
ema_banker_elliott_color = color.from_gradient(elliott_all_waves, elliott_all_waves, banker_long_term, color.aqua, color.maroon)
ema_banker_short_term_color = color.from_gradient(banker_short_term, elliott_all_waves, banker_long_term, color.aqua, color.maroon)
ema_banker_medium_term_color = color.from_gradient(banker_medium_term, elliott_all_waves, banker_long_term, color.aqua, color.maroon)
ema_banker_long_term_color = color.from_gradient(banker_long_term, elliott_all_waves, banker_long_term, color.aqua, color.maroon)
//-----------------------------------------------------------------------------}

// Plot
//-----------------------------------------------------------------------------{
plot(show_banker ? ema_elliott_all_waves : na, title = "Elliott all waves", color = ema_banker_elliott_color, linewidth = 1, style = plot.style_circles)
plot(show_banker ? ema_banker_short_term : na, title = "Banker short term", color = ema_banker_short_term_color, linewidth = 1, style = plot.style_circles)
plot(show_banker ? ema_banker_medium_term : na, title = "Banker medium term", color = ema_banker_medium_term_color, linewidth = 1, style = plot.style_circles)
plot(show_banker ? ema_banker_long_term : na, title = "Banker long term", color = ema_banker_long_term_color, linewidth = 1, style = plot.style_circles)
//-----------------------------------------------------------------------------}


//=============================================================================
// Abnormal volume candle color
//=============================================================================

// Input
//-----------------------------------------------------------------------------{
volume_bar_grp = '► Volume Weighted Colored Bars'

vbcb = input(true, title='Enable', group = volume_bar_grp, tooltip='Colors bars based on the bar\'s volume relative to volume moving average')
length = input.int(13, group = volume_bar_grp, minval=1, title='Volume SMA Length')

low_rel_inline = 'Low Relative Volume'
low_relative_vol = input.float(0.618, title = 'Low Relative Volume Threshold', inline = low_rel_inline, group = volume_bar_grp)
low_relative_color_up = input.color(color.aqua, title = '', inline = low_rel_inline, group = volume_bar_grp)
low_relative_color_down = input.color(color.yellow, title = '', inline = low_rel_inline, group = volume_bar_grp)

normal_rel_inline = 'Normal Relative Volume'
normal_relative_color_up = input.color(color.green, title = 'Normal Relative Volume', inline = normal_rel_inline, group = volume_bar_grp)
normal_relative_color_down = input.color(color.orange, title = '', inline = normal_rel_inline, group = volume_bar_grp)

high_rel_inline = 'High Relative Volume'
high_relative_vol = input.float(1.618, title = 'High Relative Volume Threshold', inline = high_rel_inline, group = volume_bar_grp)
high_relative_color_up = input.color(color.teal, title = '', inline = high_rel_inline, group = volume_bar_grp)
high_relative_color_down = input.color(color.red, title = '', inline = high_rel_inline, group = volume_bar_grp)

extreme_rel_inline = 'Extreme Relative Volume'
extreme_relative_vol = input.float(2.618, title = 'Extreme Relative Volume Threshold', inline = extreme_rel_inline, group = volume_bar_grp)
extreme_relative_color_up = input.color(color.navy, title = '', inline = extreme_rel_inline, group = volume_bar_grp)
extreme_relative_color_down = input.color(color.maroon, title = '', inline = extreme_rel_inline, group = volume_bar_grp)
//-----------------------------------------------------------------------------}

// Calculation
//-----------------------------------------------------------------------------{
nzVolume = nz(volume)
O = open, H = high, L = low, C = close

// Volume Histogram
vAvg  = ta.sma(nzVolume, length)
//-----------------------------------------------------------------------------}

// Plot
//-----------------------------------------------------------------------------{
// Volume Based Colored Bars by KIVANÇ ÖZBİLGİÇ
color b_color = na
if vbcb
    if nzVolume >= vAvg * extreme_relative_vol
        b_color := C > O ? extreme_relative_color_up : extreme_relative_color_down
    else if nzVolume >= vAvg * high_relative_vol
        b_color := C > O ? high_relative_color_up : high_relative_color_down
    else if nzVolume <= vAvg * low_relative_vol
        b_color := C > O ? low_relative_color_up: low_relative_color_down
    else
        b_color := C > O ? normal_relative_color_up : normal_relative_color_down

barcolor(b_color, title='Volume Weighted Colored Bars', editable=false)
//-----------------------------------------------------------------------------}

//=============================================================================
// RSI overbought and oversold
//=============================================================================

// Input
//-----------------------------------------------------------------------------{
rsi_outlier_grp = '► RSI overbought and oversold indicator'
rsi_enable = input(true, title='Enable', group = rsi_outlier_grp, tooltip='Show indicator on overbought and oversold based on RSI value')
overbought = input.int(70, group = rsi_outlier_grp, minval=50, title = 'Overbought threshold')
oversold = input.int(30, group = rsi_outlier_grp, maxval=50, title = 'Oversold threshold')
//-----------------------------------------------------------------------------}

// Calculation
//-----------------------------------------------------------------------------{
rsi = ta.rsi(close, length)
//-----------------------------------------------------------------------------}

// Plot
//-----------------------------------------------------------------------------{
// Overbought and oversold labels
plotshape(ta.crossunder(rsi, oversold) ? low : na, "RSI Crossunder Oversold", shape.labelup, location.belowbar, color(na), 0 , text = '🚨', textcolor = color.green, size = size.tiny)
plotshape(ta.crossover(rsi, oversold) ? low : na, "RSI Crossover Oversold", shape.arrowup, location.belowbar, color(na), 0 , text = '⬆', textcolor = color.green, size = size.tiny)

plotshape(ta.crossover(rsi, overbought) ? high : na, "RSI Crossover Overbought", shape.labeldown, location.abovebar, color(na), 0 , text = '🚨', textcolor = color.red, size = size.tiny)
plotshape(ta.crossunder(rsi, overbought) ? high : na, "RSI Crossunder Overbought", shape.arrowdown, location.abovebar, color(na), 0 , text = '⬇', textcolor = color.red, size = size.tiny)
//-----------------------------------------------------------------------------}
