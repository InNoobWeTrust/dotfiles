//@version=5
indicator("Noob's Indicators", overlay = true, max_lines_count = 500, max_bars_back = 500)

//=============================================================================
// EMA Pythagorean
//=============================================================================

// Input
//-----------------------------------------------------------------------------{
pythagorean_grp = 'â–º EMA Pythagorean'
show_pythagorean = input.bool(true, inline = "Enable Pythagorean cloud", group = pythagorean_grp, title = "Show Pythagorean cloud", tooltip = "Pythagorean cloud is a trend indicator. Green is uptrend and red is downtrend")
ema147_color = input.color(color.new(color.navy, transp = 20), title = "EMA147", group = pythagorean_grp)
ema258_color = input.color(color.new(color.red, transp = 20), title = "EMA258", group = pythagorean_grp)
ema369_color = input.color(color.new(color.maroon, transp = 20), title = "EMA369", group = pythagorean_grp)
pythagorean_up_color = input.color(color.new(color.green, transp = 85), title = "Pythagorean Cloud", inline = "Pythagorean", group = pythagorean_grp)
pythagorean_down_color = input.color(color.new(color.red, transp = 85), title = "", inline = "Pythagorean", group = pythagorean_grp)
//-----------------------------------------------------------------------------}

// Plot
//-----------------------------------------------------------------------------{
ema147 = show_pythagorean ? ta.ema(close, 147) : na
ema258 = show_pythagorean ? ta.ema(close, 258) : na
ema369 = show_pythagorean ? ta.ema(close, 369) : na

pythagorean_body = plot(ema147, title = "EMA147 - material stage", color = ema147_color, linewidth = 1, style = plot.style_line)
pythagorean_heart = plot(ema258, title = "EMA258 - mind state", color = ema258_color, linewidth = 2, style = plot.style_line)
pythagorean_mind = plot(ema369, title = "EMA369 - brain state", color = ema369_color, linewidth = 1, style = plot.style_line)
up_down_color = ema147 > ema369 ? pythagorean_up_color : pythagorean_down_color
fill(pythagorean_body, pythagorean_mind, up_down_color)
//-----------------------------------------------------------------------------}

//=============================================================================
// Sonic R
//=============================================================================

// Input
//-----------------------------------------------------------------------------{
sonic_r_grp = 'â–º Sonic R'
show_sonic_r = input.bool(true, inline = "Enable Sonic R", group = sonic_r_grp, title = "Show Sonic R", tooltip = "Sonic R indicate dynamic support/resistant levels for price action")
//-----------------------------------------------------------------------------{

// Plot
//-----------------------------------------------------------------------------{
ema34_low = show_sonic_r ? ta.ema(low, 34) : na
ema34 = show_sonic_r ? ta.ema(close, 34) : na
ema34_high = show_sonic_r ? ta.ema(high, 34) : na

ema_signal = show_sonic_r ? ta.ema(close, 89) : na
ema200 = show_sonic_r ? ta.ema(close, 200) : na
ema610 = show_sonic_r ? ta.ema(close, 610) : na

ema34_color = input.color(color.blue, title = "EMA34", inline = "EMA34" , group = sonic_r_grp)
ema34_fill_color = input.color(color.new(color.blue, transp = 85), title = "EMA34 fill color", inline = 'EMA34', group = sonic_r_grp)
ema89_color = input.color(color.orange, title = "EMA89", inline = "EMA89" , group = sonic_r_grp)
ema200_color = input.color(color.purple, title = "EMA200", inline = "EMA200" , group = sonic_r_grp)
ema610_color = input.color(color.white, title = "EMA610", inline = "EMA610" , group = sonic_r_grp)

sonic_r_low = plot(ema34_low, title = "EMA34 low", color = ema34_fill_color, linewidth = 1, style = plot.style_line)
sonic_r_34 = plot(ema34, title = "EMA34", color = ema34_color, linewidth = 1, style = plot.style_line)
sonic_r_high = plot(ema34_high, title = "EMA 369 high", color = ema34_fill_color, linewidth = 1, style = plot.style_line)
fill(sonic_r_low, sonic_r_high, ema34_fill_color)
plot(ema_signal, title = "EMA89 signal", color = ema89_color, linewidth = 2, style = plot.style_line)
plot(ema200, title = "EMA200", color = ema200_color, linewidth = 2, style = plot.style_line)
plot(ema610, title = "EMA610", color = ema610_color, linewidth = 2, style = plot.style_line)


//=============================================================================
// Abnormal volume candle color
//=============================================================================

// Input
//-----------------------------------------------------------------------------{
volume_bar_grp = 'â–º Volume Weighted Colored Bars'

vbcb = input(true, title='Enable', group = volume_bar_grp, tooltip='Colors bars based on the bar\'s volume relative to volume moving average')
length = input.int(13, group = volume_bar_grp, minval=1, title='Volume SMA Length')

low_rel_inline = 'Low Relative Volume'
low_relative_vol = input.float(0.618, title = 'Low Relative Volume Threshold', inline = low_rel_inline, group = volume_bar_grp)
low_relative_color_up = input.color(color.aqua, title = '', inline = low_rel_inline, group = volume_bar_grp)
low_relative_color_down = input.color(color.yellow, title = '', inline = low_rel_inline, group = volume_bar_grp)

normal_rel_inline = 'Normal Relative Volume'
normal_relative_color_up = input.color(color.teal, title = 'Normal Relative Volume', inline = normal_rel_inline, group = volume_bar_grp)
normal_relative_color_down = input.color(color.orange, title = '', inline = normal_rel_inline, group = volume_bar_grp)

high_rel_inline = 'High Relative Volume'
high_relative_vol = input.float(1.618, title = 'High Relative Volume Threshold', inline = high_rel_inline, group = volume_bar_grp)
high_relative_color_up = input.color(color.green, title = '', inline = high_rel_inline, group = volume_bar_grp)
high_relative_color_down = input.color(color.red, title = '', inline = high_rel_inline, group = volume_bar_grp)

extreme_rel_inline = 'Extreme Relative Volume'
extreme_relative_vol = input.float(2.618, title = 'Extreme Relative Volume Threshold', inline = extreme_rel_inline, group = volume_bar_grp)
extreme_relative_color_up = input.color(color.navy, title = '', inline = extreme_rel_inline, group = volume_bar_grp)
extreme_relative_color_down = input.color(color.maroon, title = '', inline = extreme_rel_inline, group = volume_bar_grp)
//-----------------------------------------------------------------------------}

// Calculation
//-----------------------------------------------------------------------------{
nzVolume = nz(volume)
O = open, H = high, L = low, C = close

// Volume Histogram
vAvg  = ta.sma(nzVolume, length)
rsi = ta.rsi(close, length)
//-----------------------------------------------------------------------------}

// Plot
//-----------------------------------------------------------------------------{
// Volume Based Colored Bars by KIVANÃ‡ Ã–ZBÄ°LGÄ°Ã‡
color b_color = na
if vbcb
    if nzVolume >= vAvg * extreme_relative_vol
        b_color := C > O ? extreme_relative_color_up : extreme_relative_color_down
    else if nzVolume >= vAvg * high_relative_vol
        b_color := C > O ? high_relative_color_up : high_relative_color_down
    else if nzVolume <= vAvg * low_relative_vol
        b_color := C > O ? low_relative_color_up: low_relative_color_down
    else
        b_color := C > O ? normal_relative_color_up : normal_relative_color_down

barcolor(b_color, title='Volume Weighted Colored Bars', editable=false)
//-----------------------------------------------------------------------------}

//=============================================================================
// RSI overbought and oversold
//=============================================================================

// Input
//-----------------------------------------------------------------------------{
rsi_outlier_grp = 'â–º RSI overbought and oversold indicator'
rsi_enable = input(true, title='Enable', group = rsi_outlier_grp, tooltip='Show indicator on overbought and oversold based on RSI value')
overbought = input.int(70, group = rsi_outlier_grp, minval=50, title = 'Overbought threshold')
oversold = input.int(30, group = rsi_outlier_grp, maxval=50, title = 'Oversold threshold')
//-----------------------------------------------------------------------------}

// Plot
//-----------------------------------------------------------------------------{
// Overbought and oversold labels
plotshape(ta.crossunder(rsi, oversold) ? low : na, "RSI Crossunder Oversold", shape.labelup, location.belowbar, color(na), 0 , text = 'ðŸš¨', textcolor = color.green, size = size.tiny)
plotshape(ta.crossover(rsi, oversold) ? low : na, "RSI Crossover Oversold", shape.arrowup, location.belowbar, color(na), 0 , text = 'â¬†', textcolor = color.green, size = size.tiny)

plotshape(ta.crossover(rsi, overbought) ? high : na, "RSI Crossover Overbought", shape.labeldown, location.abovebar, color(na), 0 , text = 'ðŸš¨', textcolor = color.red, size = size.tiny)
plotshape(ta.crossunder(rsi, overbought) ? high : na, "RSI Crossunder Overbought", shape.arrowdown, location.abovebar, color(na), 0 , text = 'â¬‡', textcolor = color.red, size = size.tiny)
//-----------------------------------------------------------------------------}
