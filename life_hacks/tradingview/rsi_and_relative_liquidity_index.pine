// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © InNoobWeTrust

//@version=6
indicator("RSI + Relative Liquidity Index", overlay = false)

//===============================================================================
// Types
//===============================================================================
enum MaT
	sma = 'SMA'
	wma = 'WMA'
	ema = 'ema'
//===============================================================================
// Functions
//===============================================================================
ma(MaT t, src, int len) =>
	switch t
		MaT.sma => ta.sma(src,len)
		MaT.wma => ta.wma(src,len)
		MaT.ema => ta.ema(src,len)

relative_liquidity_index(int atr_len, int rli_len) =>
	atr = ta.atr(atr_len)
	atr_up = atr > atr[1] ? atr - atr[1] : 0
	atr_down = atr < atr[1] ? atr[1] - atr : 0
	average_atr_up = ta.sma(atr_up,rli_len)
	average_atr_down = ta.sma(atr_down,rli_len)
	relative_liquidity = average_atr_up / average_atr_down
	relative_liquidity_index = 100 - (100 / (1 + relative_liquidity))
	// Return the RLI
	relative_liquidity_index

//===============================================================================
// Input
//===============================================================================
threshold_grp = '► Thresholds'
index_low_threshold = input.float(30,'Low threshold',minval=0,maxval=50,group = threshold_grp)
index_high_threshold = input.float(70,'High threshold',minval=50,maxval=100,group = threshold_grp)

rsi_grp = '► RSI'
rsi_src = input.source(close,'RSI source',group = rsi_grp)
rsi_len = input.int(14,'RSI length',group = rsi_grp)
rsi_ma_inline = 'RSI MA'
rsi_ma_type = input.enum(MaT.sma,rsi_ma_inline,group = rsi_grp,inline = rsi_ma_inline)
rsi_ma_len = input.int(14,'',group = rsi_grp,inline = rsi_ma_inline)
oversold_color = input.color(color.new(color.green,50),'Oversold area color',group = rsi_grp)
overbought_color = input.color(color.new(color.red,50),'Overbought area color',group = rsi_grp)

liquidity_grp = '► Liquidity'
atr_len = input.int(34,'ATR length',group = liquidity_grp)
rli_len = input.int(14,'Relative Liquidity Index length',group = liquidity_grp)
low_liquidity_color = input.color(color.new(color.maroon,80),'Low liquidity area color',group = liquidity_grp)
high_liquidity_color = input.color(color.new(color.teal,80),'High liquidity area color',group = liquidity_grp)
show_chart_background = input.bool(true,'Show gradient background on chart',group = liquidity_grp)
//===============================================================================
// Calculation
//===============================================================================
rsi = ta.rsi(rsi_src,rsi_len)
rsi_ma = ma(rsi_ma_type,rsi,rsi_ma_len)
oversold_area_color = rsi <= index_low_threshold ? oversold_color : na
overbought_area_color = rsi >= index_high_threshold ? overbought_color : na

rli = relative_liquidity_index(atr_len,rli_len)
low_liquidity_area_color = rli <= index_low_threshold ? low_liquidity_color : na
high_liquidity_area_color = rli >= index_high_threshold ? high_liquidity_color : na
rli_bg_color = color.from_gradient(rli,0,100,low_liquidity_color,high_liquidity_color)

//===============================================================================
// Plot
//===============================================================================
// Thesholds
hline(index_low_threshold,'Index Low threshold',linestyle = hline.style_dashed,color=color.new(color.gray,50))
hline(50,'Index Middle',linestyle = hline.style_dashed,color=color.new(color.gray,50))
hline(index_high_threshold,'Index High threshold',linestyle = hline.style_dashed,color=color.new(color.gray,50))

// RSI
plot(rsi,'RSI',color.purple,force_overlay = false)
plot(rsi_ma,'RSI MA', color.yellow,force_overlay = false)
plot(rsi,'Oversold',oversold_area_color,style = plot.style_area,histbase = index_low_threshold)
plot(rsi,'Overbought',overbought_area_color,style = plot.style_area,histbase = index_high_threshold)

// RLI
plot(rli, 'Relative Liquidity Index',color = color.new(rli_bg_color,0),linewidth = 2,force_overlay = false)
plot(rli,'Time of low liquidity',low_liquidity_area_color,style = plot.style_area,histbase = index_low_threshold)
plot(rli,'Time of high liquidity',high_liquidity_area_color,style = plot.style_area,histbase = index_high_threshold)

bgcolor(show_chart_background ? rli_bg_color : color(na),force_overlay = true)