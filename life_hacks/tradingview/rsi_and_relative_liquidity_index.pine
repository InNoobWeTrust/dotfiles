// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © InNoobWeTrust

//@version=6
indicator("RSI + Relative Liquidity Index",max_bars_back = 3600, overlay = false)

//===============================================================================
// Types
//===============================================================================
enum MaT
	sma = 'SMA'
	wma = 'WMA'
	ema = 'ema'

type ClimaxCandle
	float o // open price
	float h // high price
	float l // low price
	float c // close price
	int b_idx // bar index
	color clr // color
	line h_line_plt // drawing of high price
	line l_line_plt // drawing of low price
	linefill fill_between_plt // fill between high and low
//===============================================================================
// Functions
//===============================================================================
ma(MaT t, src, int len) =>
	switch t
		MaT.sma => ta.sma(src,len)
		MaT.wma => ta.wma(src,len)
		MaT.ema => ta.ema(src,len)

relative_liquidity_index(int atr_len, int rli_len) =>
	atr = ta.atr(atr_len)
	atr_up = atr > atr[1] ? atr - atr[1] : 0
	atr_down = atr < atr[1] ? atr[1] - atr : 0
	average_atr_up = ta.sma(atr_up,rli_len)
	average_atr_down = ta.sma(atr_down,rli_len)
	relative_liquidity = average_atr_up / average_atr_down
	relative_liquidity_index = 100 - (100 / (1 + relative_liquidity))
	// Return the RLI
	relative_liquidity_index

climax_candle_from_history(int bar_idx, color clr, int extend_bars) =>
	bars_back = bar_index - bar_idx
	o = close[bars_back]
	h = high[bars_back]
	l = low[bars_back]
	c = low[bars_back]
	h_line_plt = line.new(bar_idx,h,bar_idx + extend_bars,h,color=clr,force_overlay = true)
	l_line_plt = line.new(bar_idx,l,bar_idx + extend_bars,l,color=clr,force_overlay = true)
	fill_between_plt = linefill.new(h_line_plt,l_line_plt,clr)
	// Return the candle
	ClimaxCandle.new(o,h,l,c,bar_idx,clr,h_line_plt,l_line_plt,fill_between_plt)

clean_candle_drawing(ClimaxCandle candle) =>
	linefill.delete(candle.fill_between_plt)
	line.delete(candle.h_line_plt)
	line.delete(candle.l_line_plt)

//===============================================================================
// Input
//===============================================================================
threshold_grp = '► Thresholds'
index_low_threshold = input.float(30,'Low threshold',minval=0,maxval=50,group = threshold_grp)
index_high_threshold = input.float(70,'High threshold',minval=50,maxval=100,group = threshold_grp)

rsi_grp = '► RSI'
rsi_src = input.source(close,'RSI source',group = rsi_grp)
rsi_len = input.int(14,'RSI length',group = rsi_grp)
rsi_ma_inline = 'RSI MA'
rsi_ma_type = input.enum(MaT.sma,rsi_ma_inline,group = rsi_grp,inline = rsi_ma_inline)
rsi_ma_len = input.int(14,'',group = rsi_grp,inline = rsi_ma_inline)
oversold_color = input.color(color.new(color.green,50),'Oversold area color',group = rsi_grp)
overbought_color = input.color(color.new(color.red,50),'Overbought area color',group = rsi_grp)

liquidity_grp = '► Liquidity'
atr_len = input.int(34,'ATR length',group = liquidity_grp)
rli_len = input.int(14,'Relative Liquidity Index length',group = liquidity_grp)
low_liquidity_color = input.color(color.new(color.maroon,80),'Low liquidity area color',group = liquidity_grp)
high_liquidity_color = input.color(color.new(color.teal,80),'High liquidity area color',group = liquidity_grp)
show_chart_background = input.bool(true,'Show gradient background on chart',group = liquidity_grp)

climax_candle_grp = '► Climax candle'
climax_candle_enable = input.bool(true,'Enable',tooltip = 'Highlight price ranges of candles that reach highest/lowest point during high liquidity zones',group = climax_candle_grp)
climax_candle_max_zones = input.int(25,'Max zones',group = climax_candle_grp)
climax_candle_max_extend = input.int(258,'Max bars to extend zones',group = climax_candle_grp)
climax_candle_zone_color_inline = 'Zone colors (low/high swing)'
climax_candle_zone_low_color = input.color(color.new(color.red,90),climax_candle_zone_color_inline,group = climax_candle_grp,inline = climax_candle_zone_color_inline)
climax_candle_zone_high_color = input.color(color.new(color.green,90),'',group = climax_candle_grp,inline = climax_candle_zone_color_inline)
//===============================================================================
// Calculation
//===============================================================================

// RSI
rsi = ta.rsi(rsi_src,rsi_len)
rsi_ma = ma(rsi_ma_type,rsi,rsi_ma_len)
oversold_area_color = rsi <= index_low_threshold ? oversold_color : na
overbought_area_color = rsi >= index_high_threshold ? overbought_color : na

// RLI
rli = relative_liquidity_index(atr_len,rli_len)
low_liquidity_area_color = rli <= index_low_threshold ? low_liquidity_color : na
high_liquidity_area_color = rli >= index_high_threshold ? high_liquidity_color : na
rli_bg_color = color.from_gradient(rli,0,100,low_liquidity_color,high_liquidity_color)

// Climax candles
var ClimaxCandle[] candles = array.new<ClimaxCandle>()
var int last_cross_middle = 0
// liquidity_crossunder_low = ta.crossunder(rli,index_low_threshold)
// liquidity_crossover_low = ta.crossover(rli,index_low_threshold)
// liquidity_crossover_high = ta.crossover(rli,index_high_threshold)
liquidity_crossunder_high = ta.crossunder(rli,index_high_threshold)
liquidity_cross_middle = ta.cross(rli,50)

if liquidity_cross_middle
	last_cross_middle := bar_index

pivot_high = ta.pivothigh(math.max(bar_index - last_cross_middle,1),0)
pivot_high_idx = ta.valuewhen(not na(pivot_high),bar_index,0)
pivot_low = ta.pivotlow(math.max(bar_index - last_cross_middle,1),0)
pivot_low_idx = ta.valuewhen(not na(pivot_low),bar_index,0)
avg_rsi_ma = ta.sma(rsi_ma,math.max(bar_index - last_cross_middle,1))

if climax_candle_enable and barstate.isconfirmed and liquidity_crossunder_high
	candle_idx = avg_rsi_ma >= 50 ? pivot_high_idx : pivot_low_idx
	clr = avg_rsi_ma >= 50 ? climax_candle_zone_low_color : climax_candle_zone_high_color
	candles.push(climax_candle_from_history(candle_idx,clr,climax_candle_max_extend))

// Prune old candles
while candles.size() > climax_candle_max_zones
	clean_candle_drawing(candles.first())
	candles.shift()
//===============================================================================
// Plot
//===============================================================================
// Thesholds
hline(index_low_threshold,'Index Low threshold',linestyle = hline.style_dashed,color=color.new(color.gray,50))
hline(50,'Index Middle',linestyle = hline.style_dashed,color=color.new(color.gray,50))
hline(index_high_threshold,'Index High threshold',linestyle = hline.style_dashed,color=color.new(color.gray,50))

// RSI
plot(rsi,'RSI',color.purple,force_overlay = false)
plot(rsi_ma,'RSI MA', color.yellow,force_overlay = false)
plot(rsi,'Oversold',oversold_area_color,style = plot.style_area,histbase = index_low_threshold)
plot(rsi,'Overbought',overbought_area_color,style = plot.style_area,histbase = index_high_threshold)

// RLI
plot(rli, 'Relative Liquidity Index',color = color.new(rli_bg_color,0),linewidth = 2,force_overlay = false)
plot(rli,'Time of low liquidity',low_liquidity_area_color,style = plot.style_area,histbase = index_low_threshold)
plot(rli,'Time of high liquidity',high_liquidity_area_color,style = plot.style_area,histbase = index_high_threshold)

bgcolor(show_chart_background ? rli_bg_color : color(na),force_overlay = true)