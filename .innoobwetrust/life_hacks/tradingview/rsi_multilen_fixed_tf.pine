// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © InNoobWeTrust

//@version=6
indicator("RSI multi-length fixed timeframe", overlay = false)

//===============================================================================
// Types
//===============================================================================
enum MaT
	sma = 'SMA'
	wma = 'WMA'
	ema = 'ema'

//===============================================================================
// Functions
//===============================================================================
ma(MaT t, src, int len) =>
	switch t
		MaT.sma => ta.sma(src,len)
		MaT.wma => ta.wma(src,len)
		MaT.ema => ta.ema(src,len)

//===============================================================================
// Input
//===============================================================================
tf = input.timeframe('','► Timeframe')

threshold_grp = '► Thresholds'
threshold_low_limit = input.float(30,'Low threshold',minval=0,maxval=50,group = threshold_grp)
threshold_high_limit = input.float(70,'High threshold',minval=50,maxval=100,group = threshold_grp)
threshold_color_inline = 'Threshold colors (middle line to low/high)'
threshold_color_middle_low = input.color(color.new(color.blue,90),threshold_color_inline,group = threshold_grp,inline = threshold_color_inline)
threshold_color_middle_high = input.color(color.new(color.yellow,90),'',group = threshold_grp,inline = threshold_color_inline)

rsi_grp = '► RSI'
rsi_src = input.source(close,'RSI source',group = rsi_grp)
rsi_len = input.int(14,'RSI length',group = rsi_grp)
rsi_ma_inline = 'RSI MA'
rsi_ma_type = input.enum(MaT.sma,rsi_ma_inline,group = rsi_grp,inline = rsi_ma_inline)
rsi_ma_len = input.int(9,'',group = rsi_grp,inline = rsi_ma_inline)
oversold_color = input.color(color.new(color.green,50),'Oversold area color',group = rsi_grp)
overbought_color = input.color(color.new(color.red,50),'Overbought area color',group = rsi_grp)

bg_grp = '► Oversold/overbought chart background'
bg_enable = input.bool(false,'Enable',group = bg_grp)
bg_color_inline = 'Background colors (oversold/overbought)'
bg_overbought_color = input.color(color.new(color.orange,90),bg_color_inline,group = bg_grp,inline = bg_color_inline)
bg_oversold_color = input.color(color.new(color.aqua,90),'',group = bg_grp,inline = bg_color_inline)

cross_grp = '► Cross signal background'
cross_signal_line = input.string('MA','Signal line',options = ['RSI','MA'],group = cross_grp)
cross_high_inline = 'High threshold'
cross_high_enable = input.bool(true,cross_high_inline,group = cross_grp,inline = cross_high_inline)
cross_high_threshold = input.int(60,'',group = cross_grp,inline = cross_high_inline)
cross_high_bg_color = input.color(color.new(color.maroon,25),'',group = cross_grp,inline = cross_high_inline)
cross_low_inline = 'Low threshold'
cross_low_enable = input.bool(true,cross_low_inline,group = cross_grp,inline = cross_low_inline)
cross_low_threshold = input.int(40,'',group = cross_grp,inline = cross_low_inline)
cross_low_bg_color = input.color(color.new(color.navy,25),'',group = cross_grp,inline = cross_low_inline)

multilen_grp = '► Multi-length'
multilen_tf = input.timeframe('5','Base',group = multilen_grp)
multilen_mult = input.int(6,'Multiplier',group = multilen_grp)
multilen_levels = input.int(4,'Levels',minval=0,maxval=4,group = multilen_grp)
multilen_color = input.color(color.new(color.aqua,85),'Color',group = multilen_grp)
multilen_avg_inline = 'Multi-length Average'
multilen_avg_enable = input.bool(true,multilen_avg_inline,group = multilen_grp,inline = multilen_avg_inline)
multilen_avg_color = input.color(color.new(color.teal,70),'',group = multilen_grp,inline = multilen_avg_inline)

//===============================================================================
// Pre-calculated
//===============================================================================
var tf_secs = timeframe.in_seconds(tf)
var multilen_tf_secs = timeframe.in_seconds(multilen_tf)
var multilen_scale = multilen_tf_secs / tf_secs
//===============================================================================
// Calculation
//===============================================================================

// RSI
rsi = ta.rsi(rsi_src,rsi_len)
tf_rsi = request.security(syminfo.tickerid,tf,rsi)
tf_rsi_ma = ma(rsi_ma_type,tf_rsi,rsi_ma_len)
oversold_area_color = tf_rsi <= threshold_low_limit ? oversold_color : na
overbought_area_color = tf_rsi >= threshold_high_limit ? overbought_color : na

// Cross
cross_signal = switch cross_signal_line
	'RSI' => tf_rsi
	'MA' => tf_rsi_ma
signal_cross_high = ta.cross(cross_signal,cross_high_threshold)
signal_cross_low = ta.cross(cross_signal,cross_low_threshold)

// Multilen RSI
multi_rsi_data = array.new<float>(4,0.)
multi_rsi_data.set(0,request.security(syminfo.tickerid,multilen_tf,ta.rsi(rsi_src,rsi_len * 1)))
multi_rsi_data.set(1,request.security(syminfo.tickerid,multilen_tf,ta.rsi(rsi_src,rsi_len * 2)))
multi_rsi_data.set(2,request.security(syminfo.tickerid,multilen_tf,ta.rsi(rsi_src,rsi_len * 3)))
multi_rsi_data.set(3,request.security(syminfo.tickerid,multilen_tf,ta.rsi(rsi_src,rsi_len * 4)))

multi_rsi_avg = multi_rsi_data.avg()
//===============================================================================
// Visual calculation
//===============================================================================
chart_bg_color = switch
	bg_enable and tf_rsi <= threshold_low_limit => bg_oversold_color
	bg_enable and tf_rsi >= threshold_high_limit => bg_overbought_color
	=> color(na)
bg_color = switch
	cross_high_enable and signal_cross_high => cross_high_bg_color
	cross_low_enable and signal_cross_low => cross_low_bg_color
	=> color(na)

//===============================================================================
// Plot
//===============================================================================

// Thresholds
low_line = hline(threshold_low_limit,'Index Low threshold',linestyle = hline.style_dashed,color=color.new(color.gray,50))
middle_line = hline(50,'Index Middle',linestyle = hline.style_dashed,color=color.new(color.gray,50))
high_line = hline(threshold_high_limit,'Index High threshold',linestyle = hline.style_dashed,color=color.new(color.gray,50))
fill(low_line,middle_line,threshold_color_middle_low)
fill(high_line,middle_line,threshold_color_middle_high)

// Cross thresholds
cross_high_line = hline(cross_high_enable ? cross_high_threshold : na,'Cross high threshold',linestyle = hline.style_dotted,color = color.new(color.gray,70))
cross_low_line = hline(cross_low_enable ? cross_low_threshold : na,'Cross low threshold',linestyle = hline.style_dotted,color = color.new(color.gray,70))

// RSI
plot(tf_rsi,'RSI',color.purple,force_overlay = false)
plot(tf_rsi_ma,'RSI MA', color.yellow,force_overlay = false)
plot(rsi,'Oversold',oversold_area_color,style = plot.style_area,histbase = threshold_low_limit)
plot(rsi,'Overbought',overbought_area_color,style = plot.style_area,histbase = threshold_high_limit)

// Chart background
bgcolor(chart_bg_color,force_overlay = true)

// Panel background
bgcolor(bg_color,force_overlay = false)

// Multi-length RSI
plot(multilen_levels > 0 ? multi_rsi_data.get(0) : na,'Multi-length RSI #1',color = multilen_color,force_overlay = false)
plot(multilen_levels > 1 ? multi_rsi_data.get(1) : na,'Multi-length RSI #2',color = multilen_color,force_overlay = false)
plot(multilen_levels > 2 ? multi_rsi_data.get(2) : na,'Multi-length RSI #3',color = multilen_color,force_overlay = false)
plot(multilen_levels > 3 ? multi_rsi_data.get(3) : na,'Multi-length RSI #4',color = multilen_color,force_overlay = false)
// Multi-length RSI Average
plot(multilen_levels > 0 and multilen_avg_enable ? multi_rsi_avg : na,'Multi-length RSI Average',color = multilen_avg_color,force_overlay = false)