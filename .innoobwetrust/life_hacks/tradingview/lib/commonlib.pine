// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © InNoobWeTrust

//@version=6

// @description InNoobWeTrust's commonlib
library('commonlib')

// @function calculate percentage of candle's wick which is longer
// @returns the wick's percentage, negative value if wick is lower wick
export bar_wick_percent() =>
    spread = high - low
    upper_wick = open < close ? high - close : high - open
    lower_wick = open < close ? open - low : close - low
    max_wick = math.max(upper_wick, lower_wick)
    bias = max_wick / spread
    bias * (max_wick == lower_wick ? 1.0 : -1.0)

// @function calculate percentage of candle's body
// @returns the body's percentage, negative value if close price is lower than open
export bar_body_percent() =>
    spread = high - low
    body = (close - open) / spread
    body

// @function Calculate the skewness of the bar as length percentage from the longer edge
// @returns the skewness in percentage, negative value means downard
export bar_skewness_percent() =>
    wick = bar_wick_percent()
    body = bar_body_percent()
    bias_sign = math.sign(wick * body)
    switch bias_sign
        1. => wick + body
        -1. => wick

// @function Calculate visible price range
// @returns tuple of [lowest, highest] price within visible range
export visible_price_range() =>
    period_ms = timeframe.in_seconds() * 1000
    lookback = chart.right_visible_bar_time - chart.left_visible_bar_time
    left_bars = math.round(lookback / period_ms)
    l = ta.lowest(left_bars)
    h = ta.highest(left_bars)
    // Return lowest and highest visible price
    [l, h]

// @function calculate spread-based power of the bar
// @returns tuple of bar power and bias value, calculated from bar information
export bar_structure() =>
    bar_balance = close - open
    bull_pwr = math.max(high - open, high - close[1])
    bear_pwr = math.max(open - low, close[1] - low)
    bar_bias = bar_balance + bull_pwr - bear_pwr
    bar_pwr = open + bar_bias
    [bar_pwr, bar_bias]
