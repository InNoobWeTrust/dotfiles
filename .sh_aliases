#!/usr/bin/env sh

if [ -n "$use_color" ]; then
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'
    alias grep='grep --colour=auto'
    alias egrep='egrep --colour=auto'
    alias fgrep='fgrep --colour=auto'
    alias ls='ls --color=auto'

    # colored GCC warnings and errors
    export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'
fi

if [ -n "$friendly_builtin" ]; then
    alias cp="cp -i"                          # confirm before overwriting something
    alias df='df -h'                          # human-readable sizes
    alias free='free -m'                      # show sizes in MB
    alias np='nano -w PKGBUILD'
    alias more=less
    # some more ls aliases
    alias ll='ls -alF'
    alias la='ls -A'
    alias l='ls -CF'
fi

# Activate starship prompt
alias env_starship='with_starship=true'
alias to_the_space='which starship &> /dev/null && eval "$(starship init ${0#-})"'
if [ -n "$with_starship" ]; then
    to_the_space
fi

# Reload shell
alias reload_my_shell='exec ${0#-}'

# Force colorful prompt for current session
alias env_rainbow='use_color=true'
alias rainbow_my_shell='env_rainbow reload_my_shell'

# Force friendly builtin for current session
alias env_friendly='friendly_builtin=true'
alias friend_my_shell='env_friendly reload_my_shell'

# Force all enhancement for current sessions
alias godmode_my_shell='env_rainbow env_friendly env_starship reload_my_shell'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Kill parallel processes running in another session
alias rampage='printf "what to kill? => "; victim=;read victim;ps -A | grep $victim | awk "{print $1}" | xargs -r kill'

# Gacha-inspired number generator
alias gacha='printf "Lower limit: ";read low;printf "Upper limit: ";read high;diff=$(($high - $low));echo "Press ENTER key to stop!";while ! read -t 0.25 -rsn 1;do printf "\r%5d" $(($RANDOM % $((diff + 1)) + $low));done'

# Update all git repositories in current directory
alias forgit-me-pull='for d in `ls -d */`; do [[ -d $d/.git/ ]] && echo "Updating git repo $d" && (cd $d; git stash; git pull --rebase --all; git stash pop); done'

# Web browser in terminal
alias browsh='docker run -it --rm browsh/browsh'

# IDE over browser
alias theia='docker run -it -p 3000:3000 -v "$(pwd):/home/project:cached" theiaide/theia:next'

# List orphan packages with pacman
alias pacorphan='pacman -Qdt'

# Remove orphan packages and dependencies with pacman
alias pacorphanrm='sudo pacman -Rs $(pacman -Qqdt)'

# automate pacman update
alias pacauto='sudo pacman -Syyu --noconfirm'

# automate apt update
alias aptauto='sudo apt update && sudo apt upgrade -y && sudo apt-get --purge autoremove -y && sudo apt autoclean -y'

# automate conda update
alias condauto='conda update --all -y && conda clean --all -y'

# automate pip update
alias pipauto='pip install --user -U $(pip freeze | sed "s/=.*//" | paste -sd " ")'

# automate nvm update node
alias nvmauto='nvm install node --reinstall-packages-from=node -y'

# automate rustup update
alias rustupauto='rustup update'

# Update stable build of neovim
alias snvimauto='curl -LJo ~/.local/bin/nvim https://github.com/neovim/neovim/releases/download/stable/nvim.appimage'

# Update nightly build of neovim
alias nnvimauto='curl -LJo ~/.local/bin/nvim https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage'

# Update starship prompt
alias starshipauto='curl -s https://api.github.com/repos/starship/starship/releases/latest | grep "browser_download_url.*starship-x86_64-unknown-linux-gnu.tar.gz" | cut -d : -f 2,3 | tr -d \" | xargs -n 1 curl -LJs | tar xvz -C ~/.local/bin/ target/x86_64-unknown-linux-gnu/release/starship && mv ~/.local/bin/target/x86_64-unknown-linux-gnu/release/starship ~/.local/bin/starship && rm -rf ~/.local/bin/target'

# automate neovim update
alias nvimauto='nvim +PlugUpgrade +PlugUpdate +UpdateRemotePlugins +PlugClean +qa'

# Download latest eclipse jdt language server
alias jlsauto='mkdir -p ~/.local/bin/eclipse.jdt.ls/ && curl -s http://download.eclipse.org/jdtls/snapshots/jdt-language-server-latest.tar.gz | tar xvz -C ~/.local/bin/eclipse.jdt.ls/'

# automate update manjaro
alias manjaroauto='pacauto && condauto && nvmauto && rustupauto && nvimauto && pipauto'

# automate update debian-based distros
alias debianauto='aptauto && nvmauto && rustupauto && nvimauto && pipauto'

# automate termux android
alias termuxauto='pkg update && apt upgrade -y && apt-get autoremove -y && apt-get autoclean -y && nvimauto && pipauto'

# Import custom alias
if [ -r ~/.sh_aliases.user ]; then
    . ~/.sh_aliases.user
fi
