#!/usr/bin/env sh
#
autocomplete_nvm=false

# Add ~/.local/**/bin to PATH if it's not there
[[ -d $HOME/.local ]] && for bin_path in $(find $HOME/.local -maxdepth 3 -name bin -type d 2>/dev/null); do
    [[ ":$PATH:" != *":$bin_path:"* ]] && [[ -d $bin_path ]] && export PATH="$bin_path:$PATH"
done

# Set neovim as default editor
if [[ $(which nvim &>/dev/null) ]]; then
    export EDITOR="$(which nvim)"
    export VISUAL="$(which nvim)"
else
    export EDITOR=/usr/bin/nano
fi

# Add dart-sdk to PATH
[[ -d /usr/lib/dart/bin ]] && [[ ":$PATH:" != *":/usr/lib/dart/bin:"* ]] && export PATH="$PATH:/usr/lib/dart/bin"

# Add pub cache to PATH
[[ -d $HOME/.pub-cache/bin ]] && [[ ":$PATH:" != *":$HOME/.pub-cache/bin:"* ]] && export PATH="$HOME/.pub-cache/bin:$PATH"

# Export GOPATH and add GOPATH to PATH
[[ -d $HOME/.go/bin ]] && export GOPATH="$HOME/.go"  && export PATH="$GOPATH/bin:$PATH"

# Add cargo to PATH
[[ -d $HOME/.cargo/bin ]] && [[ ":$PATH:" != *":$HOME/.cargo/bin:"* ]] && export PATH="$HOME/.cargo/bin:$PATH"

# Set home/root for pyenv and python-poetry
export PYENV_ROOT=$HOME/.local/pyenv
export PYENV_VIRTUALENV_DISABLE_PROMPT=1
export POETRY_HOME=$HOME/.local/poetry
[[ -d $HOME/.local/poetry ]] && source $HOME/.local/poetry/env

# Add homebrew to PATH
if [ -x /home/linuxbrew/.linuxbrew/bin/brew ]; then
    eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
elif [ -x $HOME/.linuxbrew/bin/brew ]; then
    eval $($HOME/.linuxbrew/bin/brew shellenv)
fi

# Activate nvm
if [ -d $HOME/.nvm ]; then
    export NVM_DIR="$HOME/.nvm"
    [[ -s "$NVM_DIR/nvm.sh" ]] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [[ -n $autocomplete_nvm ]] && [[ -s "$NVM_DIR/bash_completion" ]] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

# Add python argcomplete's bash completion globally
if [ -r ~/.bash_completion.d/python-argcomplete ]; then
    . ~/.bash_completion.d/python-argcomplete
fi

# Add completion for github's cli
which gh &>/dev/null && eval "$(gh completion)"
